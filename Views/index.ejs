<%- include('./components/promo') %> <%- include('./components/money') %> <%-
include('./components/categories') %>

<div class="p-4 space-y-8">
  <% products.forEach(item => { %>
  <div>
    <h2 class="font-bold text-xl sm:text-2xl m-4 text-center">
      <%= item.name %>
    </h2>

    <div
      class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4"
    >
      <% item.products.forEach(product => { %>
      <div
        class="card bg-white border rounded-lg shadow-md overflow-hidden transition-transform transform hover:scale-105 flex flex-col"
      >
        <a href="/product/<%= product.id %>" class="block">
          <img
            src="<%= product.thumbnail %>"
            alt="<%= product.title %>"
            class="h-48 w-full object-contain p-2"
          />
          <div class="p-4 text-center">
            <h3 class="font-semibold text-lg mb-1 h-12 line-clamp-2">
              <%= product.title %>
            </h3>
          </div>
        </a>
        <div class="flex items-end justify-between p-4 mt-auto">
          <p class="text-gray-800 font-semibold text-lg">
            Rp <%= Math.floor(product.price * 15000).toLocaleString("id-ID") %>
          </p>
          <% if (req.isAuthenticated) { %>
          <div id="quantity-<%= product.id %>" class="flex items-end space-x-2">
            <button
              onclick="addQuantity(event, '<%= product.id %>')"
              class="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center transition hover:bg-blue-600 shadow-md"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                width="20"
                height="20"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 4v16m8-8H4"
                />
              </svg>
            </button>
          </div>
          <% } %>
        </div>
      </div>
      <% }) %>
    </div>
  </div>
  <% }) %>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
  async function addToCart(productId) {
    try {
      const response = await axios.post("/cart/add", { productId });
      if (response.status === 200) {
        alert("Item added to cart");
        updateCartDisplay(productId);
      } else {
        alert("Failed to add item");
      }
    } catch (error) {
      console.error("Error adding item to cart:", error);
    }
  }

  async function increment(productId) {
    try {
      const response = await axios.post("/cart/increment", { productId });
      if (response.status === 200) {
        alert("Item incremented");
        updateCartDisplay(productId);
      } else {
        alert("Failed to increment item");
      }
    } catch (error) {
      console.error("Error incrementing item:", error);
    }
  }

  async function decrement(productId) {
    try {
      const response = await axios.post("/cart/decrement", { productId });
      if (response.status === 200) {
        alert("Item decremented");
        updateCartDisplay(productId);
      } else {
        alert("Failed to decrement item");
      }
    } catch (error) {
      console.error("Error decrementing item:", error);
    }
  }

  // Update the display after cart actions
  async function updateCartDisplay(productId) {
    try {
      const response = await axios.get(`/cart/${productId}`);
      const product = response.data;
      const quantityDisplay = document.getElementById(
        `quantity-display-${productId}`
      );
      const quantityButton = document.getElementById(`quantity-${productId}`);

      // Update the quantity on the page
      quantityDisplay.innerText = product.quantity;

      // You can also update other elements, like the cart item count or total price
    } catch (error) {
      console.error("Error updating cart display:", error);
    }
  }

  function addQuantity(event, productId) {
    event.stopPropagation();
    addToCart(productId); // Add to cart on button click
    const container = document.getElementById(`quantity-${productId}`);
    container.innerHTML = `
      <div class="flex items-center space-x-2 bg-gray-100 p-1 rounded-full shadow-md">
        <button
          onclick="decreaseQuantity(event, '${productId}')"
          class="bg-red-500 text-white rounded-full w-8 h-8 flex items-center justify-center hover:bg-red-600"
        >
          <!-- Minus Icon -->
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" width="16" height="16">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
          </svg>
        </button>
        <span id="quantity-display-${productId}" class="text-gray-800 font-semibold">1</span>
        <button
          onclick="increaseQuantity(event, '${productId}')"
          class="bg-green-500 text-white rounded-full w-8 h-8 flex items-center justify-center hover:bg-green-600"
        >
          <!-- Plus Icon -->
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" width="16" height="16">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
          </svg>
        </button>
      </div>
    `;
  }

  function increaseQuantity(event, productId) {
    event.stopPropagation(); // Prevent link click
    increment(productId);
    const display = document.getElementById(`quantity-display-${productId}`);
    let quantity = parseInt(display.innerText, 10);
    display.innerText = quantity + 1;
  }

  function decreaseQuantity(event, productId) {
    event.stopPropagation(); // Prevent link click
    const display = document.getElementById(`quantity-display-${productId}`);
    let quantity = parseInt(display.innerText, 10);

    if (quantity > 1) {
      display.innerText = quantity - 1;
      decrement(productId);
    } else {
      // Reset to Add Button when quantity reaches 0
      const container = document.getElementById(`quantity-${productId}`);
      container.innerHTML = `
        <button
          onclick="addQuantity(event, '${productId}')"
          class="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center transition hover:bg-blue-600 shadow-md"
        >
          <!-- Plus Icon -->
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" width="20" height="20">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
          </svg>
        </button>
      `;
    }
  }
</script>
