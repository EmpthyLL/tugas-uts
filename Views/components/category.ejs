<div class="mx-2">
  <h1
    class="font-bold text-3xl sm:text-4xl md:text-5xl my-4 sm:my-6 text-center"
  >
    Category
  </h1>

  <!-- Carousel Wrapper -->
  <div id="category-carousel" class="relative w-full" data-carousel="static">
    <!-- Carousel inner container for slides with gradient background -->
    <div
      class="relative overflow-hidden rounded-lg bg-gradient-to-r from-blue-200 via-purple-200 to-pink-200 h-[110px] sm:h-[160px] md:h-[220px] lg:h-[240px] xl:h-[280px]"
    >
      <!-- Nested Loop for Carousel Slides -->
      <% for (let i = 0; i < categories.data.length; i += 8) { %>
      <div
        class="grid grid-cols-8 gap-2 p-1 sm:p-2 duration-700 ease-in-out w-full"
        data-carousel-item
      >
        <% for (let j = i; j < i + 8 && j < categories.data.length; j++) { %>
        <a
          href="/category/<%= categories.data[j].slug %>"
          class="bg-white rounded-lg shadow-md p-1 flex flex-col justify-center items-center cursor-pointer transition-transform transform hover:scale-105"
        >
          <!-- Image for each category -->
          <img
            src="<%= '/img/category/' + categories.data[j].slug + '.png' %>"
            alt="<%= categories.data[j].name %>"
            class="w-full max-h-[60px] sm:max-h-[100px] md:max-h-[160px] lg:max-h-[180px] xl:max-h-[200px] object-cover rounded-t-lg"
          />
          <h2
            class="text-[10px] sm:text-xs md:text-sm lg:text-[16px] xl:text-lg text-center font-semibold text-black mt-1"
          >
            <%= categories.data[j].name %>
          </h2>
        </a>
        <% } %>
      </div>
      <% } %>
    </div>

    <!-- Carousel Controls -->
    <button
      type="button"
      class="absolute top-1/2 left-2 transform -translate-y-1/2 z-30 flex items-center justify-center h-6 w-6 sm:h-8 sm:w-8 bg-gray-400 dark:bg-gray-800/30 rounded-full group focus:outline-none"
      data-carousel-prev
    >
      <svg
        class="w-3 h-3 sm:w-4 sm:h-4 text-gray-200 dark:text-white"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M15 19l-7-7 7-7"
        />
      </svg>
      <span class="sr-only">Previous</span>
    </button>
    <button
      type="button"
      class="absolute top-1/2 right-2 transform -translate-y-1/2 z-30 flex items-center justify-center h-6 w-6 sm:h-8 sm:w-8 bg-gray-400 dark:bg-gray-800/30 rounded-full group focus:outline-none"
      data-carousel-next
    >
      <svg
        class="w-3 h-3 sm:w-4 sm:h-4 text-gray-200 dark:text-white"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M9 5l7 7-7 7"
        />
      </svg>
      <span class="sr-only">Next</span>
    </button>
  </div>
</div>

<!-- JavaScript to manage visibility during transition -->
<script>
  const carouselItems = document.querySelectorAll("[data-carousel-item]");
  let currentIndex = 0;

  function updateCarousel(index) {
    // Hide all items
    carouselItems.forEach((item) => {
      item.classList.add("opacity-0", "transition-opacity", "duration-700");
      item.classList.remove("block");
    });

    // Show the current item
    carouselItems[index].classList.remove("opacity-0");
    carouselItems[index].classList.add("block");
  }

  document
    .querySelector("[data-carousel-prev]")
    .addEventListener("click", () => {
      currentIndex =
        (currentIndex - 1 + carouselItems.length) % carouselItems.length;
      updateCarousel(currentIndex);
    });

  document
    .querySelector("[data-carousel-next]")
    .addEventListener("click", () => {
      currentIndex = (currentIndex + 1) % carouselItems.length;
      updateCarousel(currentIndex);
    });

  // Initialize the carousel
  updateCarousel(currentIndex);
</script>
