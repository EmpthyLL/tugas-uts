<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-routing-machine@3.2.12/dist/leaflet-routing-machine.js"></script>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f7f6;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
        }

        h1 {
            color: #333;
            font-size: 36px;
            margin-top: 20px;
            font-weight: bold;
        }

        #map {
            width: 90%;
            height: 500px;
            margin: 20px 0;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

        .leaflet-container {
            border-radius: 12px;
        }

        .leaflet-routing-container .leaflet-routing-alt {
            display: none;
        }

        .popup-custom {
            font-weight: bold;
            color: #4CAF50;
        }

        .start-btn {
            background-color: #4CAF50;
            color: white;
            padding: 12px 25px;
            font-size: 18px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15);
            margin-top: 20px;
        }

        .start-btn:hover {
            background-color: #45a049;
        }

        .start-btn:focus {
            outline: none;
        }

        @media (max-width: 768px) {
            #map {
                width: 100%;
                height: 400px;
            }

            h1 {
                font-size: 28px;
            }
        }
    </style>
</head>
<body>

<h1><%= title %></h1>
<button class="start-btn" onclick="window.location.reload();">Refresh & Find Route</button>
<div id="map"></div>

<!-- <script>
    // Pass the dynamic data from the server-side into JavaScript
    const userLocation = <%= JSON.stringify(userLocation) %>;
    const locations = <%= JSON.stringify(locations) %>;

    // Initialize the map with the user's location
    const map = L.map('map').setView([userLocation.lat, userLocation.lng], 13);

    // Add OpenStreetMap tiles to the map
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Custom icon for the user's location
    const userIcon = L.icon({
        iconUrl: 'https://cdn2.iconfinder.com/data/icons/font-awesome/1792/map-marker-32.png',
        iconSize: [32, 32],
        iconAnchor: [16, 32],
        popupAnchor: [0, -32]
    });

    // Add marker for the user's current location
    const userMarker = L.marker([userLocation.lat, userLocation.lng], { icon: userIcon }).addTo(map);
    userMarker.bindPopup("You are here").openPopup();

    // Custom icon for the store locations
    const startIcon = L.icon({
        iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [0, -41]
    });

    // Add markers and routing for each store location
    locations.forEach(location => {
        const storeMarker = L.marker([location.lat, location.lng], { icon: startIcon }).addTo(map);
        storeMarker.bindPopup(location.name).openPopup();

        // Add route from store to user location
        L.Routing.control({
            waypoints: [
                L.latLng(location.lat, location.lng),
                L.latLng(userLocation.lat, userLocation.lng)
            ],
            routeWhileDragging: false,
            lineOptions: {
                styles: [{ color: "green", opacity: 0.7, weight: 5 }]
            },
            createMarker: function () { return null; } // Avoid showing additional markers on the route
        }).addTo(map);
    });

    // Adjust map bounds to include the user's location and all store locations
    map.fitBounds([
        [userLocation.lat, userLocation.lng],
        ...locations.map(location => [location.lat, location.lng])
    ]);
</script> -->

</body>
</html>
